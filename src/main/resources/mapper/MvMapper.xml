<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zte.clonedata.dao.MvMapper">
  <resultMap id="BaseResultMap" type="com.zte.clonedata.model.Mv">
    <id column="movieid" jdbcType="VARCHAR" property="movieid" />
    <id column="mv_typeid" jdbcType="VARCHAR" property="mvTypeid" />
    <result column="moviename" jdbcType="VARCHAR" property="moviename" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="releasedata" jdbcType="VARCHAR" property="releasedata" />
    <result column="runtime" jdbcType="VARCHAR" property="runtime" />
    <result column="ratingnum" jdbcType="VARCHAR" property="ratingnum" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="p_date" jdbcType="VARCHAR" property="pDate" />
    <result column="aka" jdbcType="VARCHAR" property="aka" />
    <result column="http_image" jdbcType="VARCHAR" property="httpImage" />
    <result column="filepath" jdbcType="VARCHAR" property="filepath" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="director" jdbcType="LONGVARCHAR" property="director" />
    <result column="scenarist" jdbcType="LONGVARCHAR" property="scenarist" />
    <result column="actors" jdbcType="LONGVARCHAR" property="actors" />
    <result column="moviedesc" jdbcType="LONGVARCHAR" property="moviedesc" />
  </resultMap>

  <resultMap id="TypeNameResultMap" type="com.zte.clonedata.web.dto.MvDTO" extends="BaseResultMap">
    <result column="type_name" jdbcType="VARCHAR" property="mvTypeName" />
  </resultMap>

  <sql id="Base_Column_List">
        movieid, mv_typeid, moviename,
        type, country, language,
        releasedata, runtime, ratingnum,
        tags, p_date, aka, http_image,
        filepath, url, director,
        scenarist, actors, moviedesc
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" parameterType="com.zte.clonedata.model.MvExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clone_mv_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.zte.clonedata.model.Mv" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clone_mv_detail
    where movieid = #{movieid,jdbcType=VARCHAR}
      and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.zte.clonedata.model.Mv">
    delete from clone_mv_detail
    where movieid = #{movieid,jdbcType=VARCHAR}
      and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zte.clonedata.model.MvExample">
    delete from clone_mv_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zte.clonedata.model.Mv">
    insert into clone_mv_detail (movieid, mv_typeid, moviename, 
      type, country, language, 
      releasedata, runtime, ratingnum, 
      tags, p_date, aka, http_image, 
      filepath, url, director, 
      scenarist, actors, moviedesc
      )
    values (#{movieid,jdbcType=VARCHAR}, #{mvTypeid,jdbcType=VARCHAR}, #{moviename,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, 
      #{releasedata,jdbcType=VARCHAR}, #{runtime,jdbcType=VARCHAR}, #{ratingnum,jdbcType=VARCHAR}, 
      #{tags,jdbcType=VARCHAR}, #{pDate,jdbcType=VARCHAR}, #{aka,jdbcType=VARCHAR}, #{httpImage,jdbcType=VARCHAR}, 
      #{filepath,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{director,jdbcType=LONGVARCHAR}, 
      #{scenarist,jdbcType=LONGVARCHAR}, #{actors,jdbcType=LONGVARCHAR}, #{moviedesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zte.clonedata.model.Mv">
    insert into clone_mv_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="movieid != null">
        movieid,
      </if>
      <if test="mvTypeid != null">
        mv_typeid,
      </if>
      <if test="moviename != null">
        moviename,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="releasedata != null">
        releasedata,
      </if>
      <if test="runtime != null">
        runtime,
      </if>
      <if test="ratingnum != null">
        ratingnum,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="pDate != null">
        p_date,
      </if>
      <if test="aka != null">
        aka,
      </if>
      <if test="httpImage != null">
        http_image,
      </if>
      <if test="filepath != null">
        filepath,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="scenarist != null">
        scenarist,
      </if>
      <if test="actors != null">
        actors,
      </if>
      <if test="moviedesc != null">
        moviedesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="movieid != null">
        #{movieid,jdbcType=VARCHAR},
      </if>
      <if test="mvTypeid != null">
        #{mvTypeid,jdbcType=VARCHAR},
      </if>
      <if test="moviename != null">
        #{moviename,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="releasedata != null">
        #{releasedata,jdbcType=VARCHAR},
      </if>
      <if test="runtime != null">
        #{runtime,jdbcType=VARCHAR},
      </if>
      <if test="ratingnum != null">
        #{ratingnum,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="pDate != null">
        #{pDate,jdbcType=VARCHAR},
      </if>
      <if test="aka != null">
        #{aka,jdbcType=VARCHAR},
      </if>
      <if test="httpImage != null">
        #{httpImage,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null">
        #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="director != null">
        #{director,jdbcType=LONGVARCHAR},
      </if>
      <if test="scenarist != null">
        #{scenarist,jdbcType=LONGVARCHAR},
      </if>
      <if test="actors != null">
        #{actors,jdbcType=LONGVARCHAR},
      </if>
      <if test="moviedesc != null">
        #{moviedesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zte.clonedata.model.Mv" resultType="java.lang.Long">
    select count(*) from clone_mv_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clone_mv_detail
    <set>
      <if test="record.movieid != null">
        movieid = #{record.movieid,jdbcType=VARCHAR},
      </if>
      <if test="record.mvTypeid != null">
        mv_typeid = #{record.mvTypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.moviename != null">
        moviename = #{record.moviename,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.releasedata != null">
        releasedata = #{record.releasedata,jdbcType=VARCHAR},
      </if>
      <if test="record.runtime != null">
        runtime = #{record.runtime,jdbcType=VARCHAR},
      </if>
      <if test="record.ratingnum != null">
        ratingnum = #{record.ratingnum,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.pDate != null">
        p_date = #{record.pDate,jdbcType=VARCHAR},
      </if>
      <if test="record.aka != null">
        aka = #{record.aka,jdbcType=VARCHAR},
      </if>
      <if test="record.httpImage != null">
        http_image = #{record.httpImage,jdbcType=VARCHAR},
      </if>
      <if test="record.filepath != null">
        filepath = #{record.filepath,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.director != null">
        director = #{record.director,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.scenarist != null">
        scenarist = #{record.scenarist,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.actors != null">
        actors = #{record.actors,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.moviedesc != null">
        moviedesc = #{record.moviedesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clone_mv_detail
    set movieid = #{record.movieid,jdbcType=VARCHAR},
      mv_typeid = #{record.mvTypeid,jdbcType=VARCHAR},
      moviename = #{record.moviename,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      releasedata = #{record.releasedata,jdbcType=VARCHAR},
      runtime = #{record.runtime,jdbcType=VARCHAR},
      ratingnum = #{record.ratingnum,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      p_date = #{record.pDate,jdbcType=VARCHAR},
      aka = #{record.aka,jdbcType=VARCHAR},
      http_image = #{record.httpImage,jdbcType=VARCHAR},
      filepath = #{record.filepath,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zte.clonedata.model.Mv">
    update clone_mv_detail
    <set>
      <if test="moviename != null">
        moviename = #{moviename,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="releasedata != null">
        releasedata = #{releasedata,jdbcType=VARCHAR},
      </if>
      <if test="runtime != null">
        runtime = #{runtime,jdbcType=VARCHAR},
      </if>
      <if test="ratingnum != null">
        ratingnum = #{ratingnum,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="pDate != null">
        p_date = #{pDate,jdbcType=VARCHAR},
      </if>
      <if test="aka != null">
        aka = #{aka,jdbcType=VARCHAR},
      </if>
      <if test="httpImage != null">
        http_image = #{httpImage,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null">
        filepath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="director != null">
        director = #{director,jdbcType=LONGVARCHAR},
      </if>
      <if test="scenarist != null">
        scenarist = #{scenarist,jdbcType=LONGVARCHAR},
      </if>
      <if test="actors != null">
        actors = #{actors,jdbcType=LONGVARCHAR},
      </if>
      <if test="moviedesc != null">
        moviedesc = #{moviedesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where movieid = #{movieid,jdbcType=VARCHAR}
      and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zte.clonedata.model.Mv">
    update clone_mv_detail
    set moviename = #{moviename,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      releasedata = #{releasedata,jdbcType=VARCHAR},
      runtime = #{runtime,jdbcType=VARCHAR},
      ratingnum = #{ratingnum,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      p_date = #{pDate,jdbcType=VARCHAR},
      aka = #{aka,jdbcType=VARCHAR},
      http_image = #{httpImage,jdbcType=VARCHAR},
      filepath = #{filepath,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR}
    where movieid = #{movieid,jdbcType=VARCHAR}
      and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}
  </update>


  <select id="selectTypenameByMovieidAndMvtypeid" parameterType="com.zte.clonedata.model.Mv" resultMap="TypeNameResultMap">

    select
           <include refid="Base_Column_List" />,t.type_name
    from clone_mv_detail mv
    left join clone_data_type t on t.id = mv.mv_typeid
    where movieid = #{movieid,jdbcType=VARCHAR}
    and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}

  </select>


  <select id="getNumByPrimaryKey" parameterType="java.lang.String" resultType="java.lang.String">
    select
           ratingnum
    from
         clone_mv_detail
    where
          movieid = #{movieid,jdbcType=VARCHAR}
      and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}
  </select>

  <update id="updateRatingByPrimarKey" parameterType="java.lang.String">
    update
        clone_mv_detail
    set ratingnum = #{ratingnum,jdbcType=VARCHAR}
    where movieid = #{movieid,jdbcType=VARCHAR}
    and mv_typeid = #{mvTypeid,jdbcType=VARCHAR}
  </update>

  <select id="getMvSevenCnt" resultType="java.util.Map">
    select
           left(c.p_date,8) as d,count(*) as c
    from
         clone_mv_detail c
    group by d
    order by d desc
    limit 7
  </select>
</mapper>